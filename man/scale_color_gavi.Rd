% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gavi-colors.R
\name{scale_color_gavi}
\alias{scale_color_gavi}
\title{Color scales based on Gavi color palette}
\usage{
scale_color_gavi(palette = "standard", discrete = TRUE, reverse = FALSE, ...)
}
\arguments{
\item{palette}{A palette. Defaults to standard palette, but other palettes also available. Full list: all, standard, millennial, main, strategy, vaccine, who_region, gavi_segment, world_bank, red_green, traffic, misc1, misc2, map_blue_red, map_blue_red2, map_orange_turquoise, map_green_red, map_blues, map_reds, map_greens.}

\item{discrete}{Defaults to TRUE, keep if data is discrete. If continuous, used FALSE.}

\item{reverse}{Reverses order of palette.}

\item{...}{Additional arguments passed to \code{\link[ggplot2:discrete_scale]{ggplot2::discrete_scale()}} or \code{\link[ggplot2:scale_gradient]{ggplot2::scale_fill_gradientn()}}, used respectively when discrete is TRUE or FALSE}
}
\description{
Color scales based on Gavi color palette
}
\examples{
# Example one - applied to discrete data
library(dplyr)
library(ggplot2)
wuenic \%>\%
 filter(iso3 == "AFG" & vaccine \%in\% c("dtp1", "dtp3")) \%>\%
 ggplot(aes(year, coverage, color = vaccine)) +
 geom_line() +
 scale_color_gavi()

# Example two - with different palette, and continuous data
wuenic \%>\%
 filter(vaccine == "dtp3" & !is.na(coverage)) \%>\%
 ggplot(aes(year, coverage, color = coverage)) +
 geom_point() +
 scale_color_gavi(palette = "traffic", discrete = FALSE)

}
